<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="0" hostname="pardhu" failures="0" tests="1" name="Default test" time="77.355" errors="0" timestamp="2021-11-11T21:55:37 IST">
  <testcase classname="com.crm.GenericLib.BaseTest" name="@BeforeClass openBrowser" time="76.359">
    <failure type="org.openqa.selenium.WebDriverException" message="unknown error: DevToolsActivePort file doesn&amp;apos;t exist
Build info: version: &amp;apos;3.141.59&amp;apos;, revision: &amp;apos;e82be7d358&amp;apos;, time: &amp;apos;2018-11-14T08:25:53&amp;apos;
System info: host: &amp;apos;PARDHU&amp;apos;, ip: &amp;apos;192.168.242.1&amp;apos;, os.name: &amp;apos;Windows 8.1&amp;apos;, os.arch: &amp;apos;amd64&amp;apos;, os.version: &amp;apos;6.3&amp;apos;, java.version: &amp;apos;16.0.2&amp;apos;
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
	Ordinal0 [0x00D13AB3+2505395]
	Ordinal0 [0x00CAAE41+2076225]
	Ordinal0 [0x00BB2498+1057944]
	Ordinal0 [0x00BCFBA2+1178530]
	Ordinal0 [0x00BCC42B+1164331]
	Ordinal0 [0x00BC9EBF+1154751]
	Ordinal0 [0x00BFA02F+1351727]
	Ordinal0 [0x00BF9C9A+1350810]
	Ordinal0 [0x00BF58BB+1333435]
	Ordinal0 [0x00BD23E4+1188836]
	Ordinal0 [0x00BD323F+1192511]
	GetHandleVerifier [0x00E9CB36+1554566]
	GetHandleVerifier [0x00F44A0C+2242396]
	GetHandleVerifier [0x00DA0E0B+523099]
	GetHandleVerifier [0x00D9FEB0+519168]
	Ordinal0 [0x00CB02FD+2097917]
	Ordinal0 [0x00CB4388+2114440]
	Ordinal0 [0x00CB44C2+2114754]
	Ordinal0 [0x00CBE041+2154561]
	BaseThreadInitThunk [0x775F6A14+36]
	RtlInitializeExceptionChain [0x778FA9EF+143]
	RtlInitializeExceptionChain [0x778FA9BA+90]
">
      <![CDATA[org.openqa.selenium.WebDriverException: unknown error: DevToolsActivePort file doesn't exist
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'PARDHU', ip: '192.168.242.1', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '16.0.2'
Driver info: driver.version: ChromeDriver
remote stacktrace: Backtrace:
Ordinal0 [0x00D13AB3+2505395]
Ordinal0 [0x00CAAE41+2076225]
Ordinal0 [0x00BB2498+1057944]
Ordinal0 [0x00BCFBA2+1178530]
Ordinal0 [0x00BCC42B+1164331]
Ordinal0 [0x00BC9EBF+1154751]
Ordinal0 [0x00BFA02F+1351727]
Ordinal0 [0x00BF9C9A+1350810]
Ordinal0 [0x00BF58BB+1333435]
Ordinal0 [0x00BD23E4+1188836]
Ordinal0 [0x00BD323F+1192511]
GetHandleVerifier [0x00E9CB36+1554566]
GetHandleVerifier [0x00F44A0C+2242396]
GetHandleVerifier [0x00DA0E0B+523099]
GetHandleVerifier [0x00D9FEB0+519168]
Ordinal0 [0x00CB02FD+2097917]
Ordinal0 [0x00CB4388+2114440]
Ordinal0 [0x00CB44C2+2114754]
Ordinal0 [0x00CBE041+2154561]
BaseThreadInitThunk [0x775F6A14+36]
RtlInitializeExceptionChain [0x778FA9EF+143]
RtlInitializeExceptionChain [0x778FA9BA+90]

at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.W3CHandshakeResponse.lambda$errorHandler$0(W3CHandshakeResponse.java:62)
at org.openqa.selenium.remote.HandshakeResponse.lambda$getResponseFunction$0(HandshakeResponse.java:30)
at org.openqa.selenium.remote.ProtocolHandshake.lambda$createSession$0(ProtocolHandshake.java:126)
at java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)
at java.base/java.util.Spliterators$ArraySpliterator.tryAdvance(Spliterators.java:958)
at java.base/java.util.stream.ReferencePipeline.forEachWithCancel(ReferencePipeline.java:129)
at java.base/java.util.stream.AbstractPipeline.copyIntoWithCancel(AbstractPipeline.java:502)
at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:488)
at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:474)
at java.base/java.util.stream.FindOps$FindOp.evaluateSequential(FindOps.java:150)
at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
at java.base/java.util.stream.ReferencePipeline.findFirst(ReferencePipeline.java:647)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:128)
at org.openqa.selenium.remote.ProtocolHandshake.createSession(ProtocolHandshake.java:74)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:136)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.startSession(RemoteWebDriver.java:213)
at org.openqa.selenium.remote.RemoteWebDriver.<init>(RemoteWebDriver.java:131)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:181)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:168)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:123)
at com.crm.GenericLib.BaseTest.openBrowser(BaseTest.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:62)
at org.testng.internal.ConfigInvoker.invokeConfigurationMethod(ConfigInvoker.java:385)
at org.testng.internal.ConfigInvoker.invokeConfigurations(ConfigInvoker.java:321)
at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:176)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:122)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </failure>
  </testcase> <!-- @BeforeClass openBrowser -->
  <testcase classname="com.crm.GenericLib.BaseTest" name="@AfterClass closeBrowser" time="-1.636647931887E9">
    <skipped/>
  </testcase> <!-- @AfterClass closeBrowser -->
  <testcase classname="com.crm.main.Runner" name="Logging" time="0.0">
    <skipped/>
  </testcase> <!-- Logging -->
</testsuite> <!-- Default test -->
